<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.resto.shop.web.dao.OrderMapper">
    <resultMap id="BaseResultMap" type="com.resto.shop.web.model.Order">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="table_number" property="tableNumber" jdbcType="VARCHAR"/>
        <result column="customer_count" property="customerCount"
                jdbcType="INTEGER"/>
        <result column="accounting_time" property="accountingTime"
                jdbcType="DATE"/>
        <result column="order_state" property="orderState" jdbcType="INTEGER"/>
        <result column="production_status" property="productionStatus"
                jdbcType="INTEGER"/>
        <result column="original_amount" property="originalAmount"
                jdbcType="DECIMAL"/>
        <result column="reduction_amount" property="reductionAmount"
                jdbcType="DECIMAL"/>
        <result column="payment_amount" property="paymentAmount"
                jdbcType="DECIMAL"/>
        <result column="order_money" property="orderMoney" jdbcType="DECIMAL"/>
        <result column="article_count" property="articleCount"
                jdbcType="INTEGER"/>
        <result column="serial_number" property="serialNumber"
                jdbcType="VARCHAR"/>
        <result column="confirm_time" property="confirmTime" jdbcType="TIMESTAMP"/>
        <result column="print_times" property="printTimes" jdbcType="INTEGER"/>
        <result column="allow_cancel" property="allowCancel" jdbcType="BIT"/>
        <result column="allow_appraise" property="allowAppraise"
                jdbcType="BIT"/>
        <result column="closed" property="closed" jdbcType="BIT"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="operator_id" property="operatorId" jdbcType="VARCHAR"/>
        <result column="customer_id" property="customerId" jdbcType="VARCHAR"/>
        <result column="distribution_date" property="distributionDate"
                jdbcType="DATE"/>
        <result column="distribution_time_id" property="distributionTimeId"
                jdbcType="INTEGER"/>
        <result column="delivery_point_id" property="deliveryPointId"
                jdbcType="INTEGER"/>
        <result column="shop_detail_id" property="shopDetailId"
                jdbcType="VARCHAR"/>
        <result column="distribution_mode_id" property="distributionModeId"
                jdbcType="INTEGER"/>
        <result column="ver_code" property="verCode" jdbcType="VARCHAR"/>
        <result column="push_order_time" property="pushOrderTime"
                jdbcType="TIMESTAMP"/>
        <result column="print_order_time" property="printOrderTime"
                jdbcType="TIMESTAMP"/>
        <result column="call_number_time" property="callNumberTime"
                jdbcType="TIMESTAMP"/>
        <result column="order_mode" property="orderMode" jdbcType="INTEGER"/>
        <result column="brand_id" property="brandId" jdbcType="VARCHAR"/>
        <result column="amount_with_children" property="amountWithChildren"
                jdbcType="DECIMAL"/>
        <result column="parent_order_id" property="parentOrderId"
                jdbcType="VARCHAR"/>
        <result column="allow_continue_order" property="allowContinueOrder"
                jdbcType="BIT"/>
        <result column="count_with_child" property="countWithChild"
                jdbcType="INTEGER"/>
        <result column="last_order_time" property="lastOrderTime"
                jdbcType="TIMESTAMP"/>
        <result column="orderCount" property="orderCount"/>
        <result column="orderTotal" property="orderTotal"/>
    </resultMap>

    <resultMap id="selectOrderDetailsMap" type="com.resto.shop.web.model.Order">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="shop_detail_id" property="shopDetailId" jdbcType="VARCHAR"/>
        <result column="order_state" property="orderState" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="distribution_mode_id" property="distributionModeId" jdbcType="INTEGER"/>
        <result column="ver_code" property="verCode" jdbcType="VARCHAR"/>
        <result column="order_state" property="orderState" jdbcType="VARCHAR"/>
        <result column="order_money" property="orderMoney" jdbcType="DECIMAL"/>

        <association property="customer" javaType="com.resto.shop.web.model.Customer">
            <id column="customer_id" property="id"/>
            <result column="telephone" property="telephone"/>
        </association>

        <association property="appraise" javaType="com.resto.shop.web.model.Appraise">
            <id column="appraise_id" property="id"/>
            <result column="level" property="level"/>
            <result column="content" property="content"/>
        </association>

        <collection property="orderItems" javaType="List" ofType="orderItem">
            <id column="orderItem_id" property="id"/>
            <result column="article_name" property="articleName" jdbcType="VARCHAR"/>
            <result column="count" property="count" jdbcType="INTEGER"/>
            <result column="final_price" property="finalPrice" jdbcType="DECIMAL"/>
            <result column="unit_price" property="unitPrice" jdbcType="DECIMAL"/>
            <association property="articleFamily" javaType="com.resto.shop.web.model.ArticleFamily">
                <id column="articleFamily_id" property="id"/>
                <result column="articleFamilyName" property="name"/>
            </association>
        </collection>
    </resultMap>


    <resultMap id="selectOrdersMap" type="com.resto.shop.web.model.Order">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="shop_detail_id" property="shopDetailId" jdbcType="VARCHAR"/>
        <result column="order_state" property="orderState" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="ver_code" property="verCode" jdbcType="VARCHAR"/>
        <result column="order_state" property="orderState" jdbcType="VARCHAR"/>
        <result column="order_money" property="orderMoney" jdbcType="DECIMAL"/>
        <result column="production_status" property="productionStatus"/>

        <association property="customer" javaType="com.resto.shop.web.model.Customer">
            <id column="customer_id" property="id"/>
            <result column="telephone" property="telephone"/>
        </association>

        <association property="appraise" javaType="com.resto.shop.web.model.Appraise">
            <id column="appraise_id" property="id"/>
            <result column="level" property="level"/>
        </association>

        <collection property="orderPaymentItems" javaType="List" ofType="orderPaymentItem">
            <id column="orderPaymentItem_id" property="id"/>
            <result column="pay_value" property="payValue"/>
            <result column="payment_mode_id" property="paymentModeId"/>
        </collection>
    </resultMap>

    <resultMap id="selectListBybrandIdmap" type="com.resto.shop.web.model.Order">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="shop_detail_id" property="shopDetailId" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="order_money" property="orderMoney" jdbcType="DECIMAL"/>

        <association property="appraise" javaType="com.resto.shop.web.model.Appraise">
            <id column="appraise_id" property="id"/>
            <result column="level" property="level"/>
            <result column="red_money" property="redMoney"/>
        </association>

    </resultMap>


    <resultMap id="selectListByshopIdmap" type="com.resto.shop.web.model.Order">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="shop_detail_id" property="shopDetailId" jdbcType="VARCHAR"/>
        <result column="order_money" property="orderMoney" jdbcType="DECIMAL"/>

        <association property="appraise" javaType="com.resto.shop.web.model.Appraise">
            <id column="appraise_id" property="id"/>
            <result column="level" property="level"/>
            <result column="red_money" property="redMoney"/>
            <result column="content" property="content"/>
            <result column="feedback" property="feedback"/>
            <result column="create_time" property="createTime"/>
        </association>

        <association property="customer" javaType="com.resto.shop.web.model.Customer">
            <id column="customer_id" property="id"/>
            <result column="telephone" property="telephone"/>
        </association>
    </resultMap>

    <resultMap id="selectOrderTableNumberMap" type="com.resto.shop.web.model.Order">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="shop_detail_id" property="shopDetailId" jdbcType="VARCHAR"/>
        <result column="order_state" property="orderState" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="distribution_mode_id" property="distributionModeId" jdbcType="INTEGER"/>
        <result column="ver_code" property="verCode" jdbcType="VARCHAR"/>
        <result column="order_state" property="orderState" jdbcType="VARCHAR"/>
        <result column="order_money" property="orderMoney" jdbcType="DECIMAL"/>

        <collection property="orderItems" javaType="List" ofType="orderItem" select="selectOrderItems" column="{order_id = id}">
            <id column="orderItem_id" property="id"/>
            <result column="article_name" property="articleName" jdbcType="VARCHAR"/>
            <result column="count" property="count" jdbcType="INTEGER"/>
            <result column="final_price" property="finalPrice" jdbcType="DECIMAL"/>
            <result column="unit_price" property="unitPrice" jdbcType="DECIMAL"/>
        </collection>

        <collection property="orderPaymentItems" javaType="List" ofType="orderPaymentItem" select="selectOrderPaymentItems" column="{order_id = id}">
            <id column="orderPaymentItem_id" property="id"/>
            <result column="pay_value" property="payValue"/>
            <result column="payment_mode_id" property="paymentModeId"/>
        </collection>
    </resultMap>



    <sql id="Base_Column_List">
		id, table_number, customer_count, accounting_time,
		order_state,
		production_status,
		original_amount, reduction_amount,
		payment_amount, order_money, article_count,
		serial_number,
		confirm_time, print_times, allow_cancel, allow_appraise, closed,
		remark,
		create_time,
		operator_id, customer_id, distribution_date,
		distribution_time_id,
		delivery_point_id,
		shop_detail_id,
		distribution_mode_id, ver_code, push_order_time, print_order_time,
		call_number_time, order_mode, brand_id, amount_with_children,
		parent_order_id, allow_continue_order,
		count_with_child,
		last_order_time
	</sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap"
            parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from tb_order
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		tb_order
		where id = #{id,jdbcType=VARCHAR}
	</delete>
    <insert id="insert" parameterType="com.resto.shop.web.model.Order">
		insert into tb_order (id,
		table_number, customer_count,
		accounting_time, order_state,
		production_status,
		original_amount, reduction_amount, payment_amount,
		order_money, article_count, serial_number,
		confirm_time, print_times,
		allow_cancel,
		allow_appraise, closed, remark,
		create_time, operator_id,
		customer_id,
		distribution_date, distribution_time_id,
		delivery_point_id,
		shop_detail_id, distribution_mode_id, ver_code,
		push_order_time, print_order_time, call_number_time,
		order_mode,
		brand_id, amount_with_children,
		parent_order_id, allow_continue_order,
		count_with_child,
		last_order_time)
		values (#{id,jdbcType=VARCHAR},
		#{tableNumber,jdbcType=VARCHAR},
		#{customerCount,jdbcType=INTEGER},
		#{accountingTime,jdbcType=DATE}, #{orderState,jdbcType=INTEGER},
		#{productionStatus,jdbcType=INTEGER},
		#{originalAmount,jdbcType=DECIMAL},
		#{reductionAmount,jdbcType=DECIMAL},
		#{paymentAmount,jdbcType=DECIMAL},
		#{orderMoney,jdbcType=DECIMAL},
		#{articleCount,jdbcType=INTEGER}, #{serialNumber,jdbcType=VARCHAR},
		#{confirmTime,jdbcType=TIMESTAMP}, #{printTimes,jdbcType=INTEGER},
		#{allowCancel,jdbcType=BIT},
		#{allowAppraise,jdbcType=BIT},
		#{closed,jdbcType=BIT}, #{remark,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP}, #{operatorId,jdbcType=VARCHAR},
		#{customerId,jdbcType=VARCHAR},
		#{distributionDate,jdbcType=DATE},
		#{distributionTimeId,jdbcType=INTEGER},
		#{deliveryPointId,jdbcType=INTEGER},
		#{shopDetailId,jdbcType=VARCHAR},
		#{distributionModeId,jdbcType=INTEGER}, #{verCode,jdbcType=VARCHAR},
		#{pushOrderTime,jdbcType=TIMESTAMP},
		#{printOrderTime,jdbcType=TIMESTAMP},
		#{callNumberTime,jdbcType=TIMESTAMP},
		#{orderMode,jdbcType=INTEGER},
		#{brandId,jdbcType=VARCHAR}, #{amountWithChildren,jdbcType=DECIMAL},
		#{parentOrderId,jdbcType=VARCHAR}, #{allowContinueOrder,jdbcType=BIT},
		#{countWithChild,jdbcType=INTEGER},
		#{lastOrderTime,jdbcType=TIMESTAMP})
	</insert>
    <insert id="insertSelective" parameterType="com.resto.shop.web.model.Order">
        insert into tb_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="tableNumber != null">
                table_number,
            </if>
            <if test="customerCount != null">
                customer_count,
            </if>
            <if test="accountingTime != null">
                accounting_time,
            </if>
            <if test="orderState != null">
                order_state,
            </if>
            <if test="productionStatus != null">
                production_status,
            </if>
            <if test="originalAmount != null">
                original_amount,
            </if>
            <if test="reductionAmount != null">
                reduction_amount,
            </if>
            <if test="paymentAmount != null">
                payment_amount,
            </if>
            <if test="orderMoney != null">
                order_money,
            </if>
            <if test="articleCount != null">
                article_count,
            </if>
            <if test="serialNumber != null">
                serial_number,
            </if>
            <if test="confirmTime != null">
                confirm_time,
            </if>
            <if test="printTimes != null">
                print_times,
            </if>
            <if test="allowCancel != null">
                allow_cancel,
            </if>
            <if test="allowAppraise != null">
                allow_appraise,
            </if>
            <if test="closed != null">
                closed,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="operatorId != null">
                operator_id,
            </if>
            <if test="customerId != null">
                customer_id,
            </if>
            <if test="distributionDate != null">
                distribution_date,
            </if>
            <if test="distributionTimeId != null">
                distribution_time_id,
            </if>
            <if test="deliveryPointId != null">
                delivery_point_id,
            </if>
            <if test="shopDetailId != null">
                shop_detail_id,
            </if>
            <if test="distributionModeId != null">
                distribution_mode_id,
            </if>
            <if test="verCode != null">
                ver_code,
            </if>
            <if test="pushOrderTime != null">
                push_order_time,
            </if>
            <if test="printOrderTime != null">
                print_order_time,
            </if>
            <if test="callNumberTime != null">
                call_number_time,
            </if>
            <if test="orderMode != null">
                order_mode,
            </if>
            <if test="brandId != null">
                brand_id,
            </if>
            <if test="amountWithChildren != null">
                amount_with_children,
            </if>
            <if test="parentOrderId != null">
                parent_order_id,
            </if>
            <if test="allowContinueOrder != null">
                allow_continue_order,
            </if>
            <if test="countWithChild != null">
                count_with_child,
            </if>
            <if test="lastOrderTime != null">
                last_order_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="tableNumber != null">
                #{tableNumber,jdbcType=VARCHAR},
            </if>
            <if test="customerCount != null">
                #{customerCount,jdbcType=INTEGER},
            </if>
            <if test="accountingTime != null">
                #{accountingTime,jdbcType=DATE},
            </if>
            <if test="orderState != null">
                #{orderState,jdbcType=INTEGER},
            </if>
            <if test="productionStatus != null">
                #{productionStatus,jdbcType=INTEGER},
            </if>
            <if test="originalAmount != null">
                #{originalAmount,jdbcType=DECIMAL},
            </if>
            <if test="reductionAmount != null">
                #{reductionAmount,jdbcType=DECIMAL},
            </if>
            <if test="paymentAmount != null">
                #{paymentAmount,jdbcType=DECIMAL},
            </if>
            <if test="orderMoney != null">
                #{orderMoney,jdbcType=DECIMAL},
            </if>
            <if test="articleCount != null">
                #{articleCount,jdbcType=INTEGER},
            </if>
            <if test="serialNumber != null">
                #{serialNumber,jdbcType=VARCHAR},
            </if>
            <if test="confirmTime != null">
                #{confirmTime,jdbcType=TIMESTAMP},
            </if>
            <if test="printTimes != null">
                #{printTimes,jdbcType=INTEGER},
            </if>
            <if test="allowCancel != null">
                #{allowCancel,jdbcType=BIT},
            </if>
            <if test="allowAppraise != null">
                #{allowAppraise,jdbcType=BIT},
            </if>
            <if test="closed != null">
                #{closed,jdbcType=BIT},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="operatorId != null">
                #{operatorId,jdbcType=VARCHAR},
            </if>
            <if test="customerId != null">
                #{customerId,jdbcType=VARCHAR},
            </if>
            <if test="distributionDate != null">
                #{distributionDate,jdbcType=DATE},
            </if>
            <if test="distributionTimeId != null">
                #{distributionTimeId,jdbcType=INTEGER},
            </if>
            <if test="deliveryPointId != null">
                #{deliveryPointId,jdbcType=INTEGER},
            </if>
            <if test="shopDetailId != null">
                #{shopDetailId,jdbcType=VARCHAR},
            </if>
            <if test="distributionModeId != null">
                #{distributionModeId,jdbcType=INTEGER},
            </if>
            <if test="verCode != null">
                #{verCode,jdbcType=VARCHAR},
            </if>
            <if test="pushOrderTime != null">
                #{pushOrderTime,jdbcType=TIMESTAMP},
            </if>
            <if test="printOrderTime != null">
                #{printOrderTime,jdbcType=TIMESTAMP},
            </if>
            <if test="callNumberTime != null">
                #{callNumberTime,jdbcType=TIMESTAMP},
            </if>
            <if test="orderMode != null">
                #{orderMode,jdbcType=INTEGER},
            </if>
            <if test="brandId != null">
                #{brandId,jdbcType=VARCHAR},
            </if>
            <if test="amountWithChildren != null">
                #{amountWithChildren,jdbcType=DECIMAL},
            </if>
            <if test="parentOrderId != null">
                #{parentOrderId,jdbcType=VARCHAR},
            </if>
            <if test="allowContinueOrder != null">
                #{allowContinueOrder,jdbcType=BIT},
            </if>
            <if test="countWithChild != null">
                #{countWithChild,jdbcType=INTEGER},
            </if>
            <if test="lastOrderTime != null">
                #{lastOrderTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.resto.shop.web.model.Order">
        update tb_order
        <set>
            <if test="tableNumber != null">
                table_number = #{tableNumber,jdbcType=VARCHAR},
            </if>
            <if test="customerCount != null">
                customer_count = #{customerCount,jdbcType=INTEGER},
            </if>
            <if test="accountingTime != null">
                accounting_time = #{accountingTime,jdbcType=DATE},
            </if>
            <if test="orderState != null">
                order_state = #{orderState,jdbcType=INTEGER},
            </if>
            <if test="productionStatus != null">
                production_status = #{productionStatus,jdbcType=INTEGER},
            </if>
            <if test="originalAmount != null">
                original_amount = #{originalAmount,jdbcType=DECIMAL},
            </if>
            <if test="reductionAmount != null">
                reduction_amount = #{reductionAmount,jdbcType=DECIMAL},
            </if>
            <if test="paymentAmount != null">
                payment_amount = #{paymentAmount,jdbcType=DECIMAL},
            </if>
            <if test="orderMoney != null">
                order_money = #{orderMoney,jdbcType=DECIMAL},
            </if>
            <if test="articleCount != null">
                article_count = #{articleCount,jdbcType=INTEGER},
            </if>
            <if test="serialNumber != null">
                serial_number = #{serialNumber,jdbcType=VARCHAR},
            </if>
            <if test="confirmTime != null">
                confirm_time = #{confirmTime,jdbcType=TIMESTAMP},
            </if>
            <if test="printTimes != null">
                print_times = #{printTimes,jdbcType=INTEGER},
            </if>
            <if test="allowCancel != null">
                allow_cancel = #{allowCancel,jdbcType=BIT},
            </if>
            <if test="allowAppraise != null">
                allow_appraise = #{allowAppraise,jdbcType=BIT},
            </if>
            <if test="closed != null">
                closed = #{closed,jdbcType=BIT},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="operatorId != null">
                operator_id = #{operatorId,jdbcType=VARCHAR},
            </if>
            <if test="customerId != null">
                customer_id = #{customerId,jdbcType=VARCHAR},
            </if>
            <if test="distributionDate != null">
                distribution_date = #{distributionDate,jdbcType=DATE},
            </if>
            <if test="distributionTimeId != null">
                distribution_time_id =
                #{distributionTimeId,jdbcType=INTEGER},
            </if>
            <if test="deliveryPointId != null">
                delivery_point_id = #{deliveryPointId,jdbcType=INTEGER},
            </if>
            <if test="shopDetailId != null">
                shop_detail_id = #{shopDetailId,jdbcType=VARCHAR},
            </if>
            <if test="distributionModeId != null">
                distribution_mode_id =
                #{distributionModeId,jdbcType=INTEGER},
            </if>
            <if test="verCode != null">
                ver_code = #{verCode,jdbcType=VARCHAR},
            </if>
            <if test="pushOrderTime != null">
                push_order_time = #{pushOrderTime,jdbcType=TIMESTAMP},
            </if>
            <if test="printOrderTime != null">
                print_order_time = #{printOrderTime,jdbcType=TIMESTAMP},
            </if>
            <if test="callNumberTime != null">
                call_number_time = #{callNumberTime,jdbcType=TIMESTAMP},
            </if>
            <if test="orderMode != null">
                order_mode = #{orderMode,jdbcType=INTEGER},
            </if>
            <if test="brandId != null">
                brand_id = #{brandId,jdbcType=VARCHAR},
            </if>
            <if test="amountWithChildren != null">
                amount_with_children =
                #{amountWithChildren,jdbcType=DECIMAL},
            </if>
            <if test="parentOrderId != null">
                parent_order_id = #{parentOrderId,jdbcType=VARCHAR},
            </if>
            <if test="allowContinueOrder != null">
                allow_continue_order =
                #{allowContinueOrder,jdbcType=BIT},
            </if>
            <if test="countWithChild != null">
                count_with_child = #{countWithChild,jdbcType=INTEGER},
            </if>
            <if test="lastOrderTime != null">
                last_order_time = #{lastOrderTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.resto.shop.web.model.Order">
		update tb_order
		set table_number = #{tableNumber,jdbcType=VARCHAR},
		customer_count =
		#{customerCount,jdbcType=INTEGER},
		accounting_time =
		#{accountingTime,jdbcType=DATE},
		order_state =
		#{orderState,jdbcType=INTEGER},
		production_status =
		#{productionStatus,jdbcType=INTEGER},
		original_amount =
		#{originalAmount,jdbcType=DECIMAL},
		reduction_amount =
		#{reductionAmount,jdbcType=DECIMAL},
		payment_amount =
		#{paymentAmount,jdbcType=DECIMAL},
		order_money =
		#{orderMoney,jdbcType=DECIMAL},
		article_count =
		#{articleCount,jdbcType=INTEGER},
		serial_number =
		#{serialNumber,jdbcType=VARCHAR},
		confirm_time =
		#{confirmTime,jdbcType=TIMESTAMP},
		print_times =
		#{printTimes,jdbcType=INTEGER},
		allow_cancel =
		#{allowCancel,jdbcType=BIT},
		allow_appraise =
		#{allowAppraise,jdbcType=BIT},
		closed = #{closed,jdbcType=BIT},
		remark =
		#{remark,jdbcType=VARCHAR},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		operator_id =
		#{operatorId,jdbcType=VARCHAR},
		customer_id =
		#{customerId,jdbcType=VARCHAR},
		distribution_date =
		#{distributionDate,jdbcType=DATE},
		distribution_time_id =
		#{distributionTimeId,jdbcType=INTEGER},
		delivery_point_id =
		#{deliveryPointId,jdbcType=INTEGER},
		shop_detail_id =
		#{shopDetailId,jdbcType=VARCHAR},
		distribution_mode_id =
		#{distributionModeId,jdbcType=INTEGER},
		ver_code =
		#{verCode,jdbcType=VARCHAR},
		push_order_time =
		#{pushOrderTime,jdbcType=TIMESTAMP},
		print_order_time =
		#{printOrderTime,jdbcType=TIMESTAMP},
		call_number_time =
		#{callNumberTime,jdbcType=TIMESTAMP},
		order_mode =
		#{orderMode,jdbcType=INTEGER},
		brand_id = #{brandId,jdbcType=VARCHAR},
		amount_with_children = #{amountWithChildren,jdbcType=DECIMAL},
		parent_order_id = #{parentOrderId,jdbcType=VARCHAR},
		allow_continue_order = #{allowContinueOrder,jdbcType=BIT},
		count_with_child = #{countWithChild,jdbcType=INTEGER},
		last_order_time
		= #{lastOrderTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=VARCHAR}
	</update>

    <select id="selectList" resultType="Order">select * from tb_order</select>

    <!-- 根据 店铺ID 和 用户ID 分页查询订单列表 -->
    <select id="orderList" resultType="Order">
        SELECT * from tb_order where shop_detail_id = #{shopId} and
        customer_id = #{customerId}
        <if test="orderState != null and orderState != '' ">
            and ORDER_STATE in
            <foreach collection="orderState" item="state" open="("
                     separator="," close=")">
                #{state}
            </foreach>
        </if>
        and parent_order_id is null
        ORDER BY create_time DESC LIMIT
        #{start},#{datalength}
    </select>

    <!-- 根据订单查询 订单状态 和 生产状态 -->
    <select id="selectOrderStatesById" resultType="Order">
		SELECT
		id,order_state,production_status,allow_continue_order,allow_cancel,allow_appraise
		from tb_order where id = #{orderId}
	</select>

    <!-- 查询 用户的新订单,如果 订单ID有值。则查询订单的详情 -->
    <select id="findCustomerNewOrder" resultType="Order">
        SELECT * from tb_order
        <if test="orderId == null or orderId == '' ">
            where customer_id=#{customerId} and shop_detail_id=#{shopId} and
            create_time > #{beginDate}
            and order_state in
            <foreach collection="orderState" item="state" open="("
                     separator="," close=")">
                #{state}
            </foreach>
            ORDER BY create_time DESC LIMIT 0,1
        </if>
        <if test="orderId != null and orderId != '' ">
            where id=#{orderId}
        </if>
    </select>
    <select id="selectShopOrderByDateAndProductionStates"
            resultType="Order">
        select * from tb_order
        where shop_detail_id=#{shopId} and
        create_time>#{date} and
        production_status in
        <foreach collection="proStatus" item="state" open="("
                 separator="," close=")">
            #{state}
        </foreach>
        and closed=0
    </select>

    <select id="selectHistoryOrderList" resultType="Order">
		SELECT
		push_order_time,
		id,
		ver_code,
		article_count,
		table_number
		FROM
		tb_order
		WHERE
		shop_detail_id=#{shopId}
		AND
		<![CDATA[ push_order_time>#{dateBegin} AND push_order_time<#{dateEnd}]]>
		and closed=0
		order by push_order_time DESC;
	</select>

    <select id="selectErrorOrderList" resultType="Order">
		SELECT
		push_order_time,
		id,
		ver_code,
		article_count,
		table_number
		FROM
		tb_order
		WHERE
		shop_detail_id=#{shopId}
		AND
		<![CDATA[ push_order_time>#{dateBegin} AND push_order_time<#{dateEnd}]]>
		and production_status = 5 and order_state != 9 and print_times = 0
		order by push_order_time DESC;
	</select>


    <select id="listOrderByStatus" resultType="Order">
        SELECT
        push_order_time,
        id,
        ver_code,
        article_count,
        table_number,
        parent_order_id
        FROM
        tb_order
        WHERE
        shop_detail_id=#{shopId}
        AND
        <![CDATA[ create_time>=#{begin} AND create_time<=#{end}]]>
        and order_state in
        <foreach collection="o_state" open="(" close=")" separator=","
                 item="orderState">
            #{orderState}
        </foreach>
        and production_status in
        <foreach collection="p_status" open="(" close=")" separator=","
                 item="productionStatus">
            #{productionStatus}
        </foreach>
        order by create_time DESC;
    </select>

    <update id="clearPushOrder">
		update tb_order set
		push_order_time=(NULL),production_status
		=#{1},allow_cancel=1 where
		id=#{0}
	</update>
    <update id="setOrderNumber">
		update tb_order set table_number=#{1} where id=#{0}
	</update>


    <!-- 关联查询 订单表和客户信息表 -->
    <resultMap id="OrderCustomerMap" type="com.resto.shop.web.model.Order">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="order_state" property="orderState" jdbcType="INTEGER"/>
        <result column="production_status" property="productionStatus"
                jdbcType="INTEGER"/>
        <result column="article_count" property="articleCount"
                jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="serial_number" property="serialNumber"
                jdbcType="VARCHAR"/>
        <result column="order_money" property="orderMoney" jdbcType="DECIMAL"/>
        <association property="customer" javaType="com.resto.shop.web.model.Customer">
            <id column="customer_id" property="id"/>
            <result column="nickname" property="nickname"/>
            <result column="telephone" property="telephone"/>
        </association>
    </resultMap>

    <!-- 根据取餐码查询已支付的订单 -->
    <select id="selectOrderByVercode" resultMap="OrderCustomerMap">
		SELECT
		o.id,o.order_state,o.production_status,o.article_count,o.create_time,o.serial_number,o.order_money,c.nickname,c.telephone,c.id
		customer_id
		from tb_order o LEFT JOIN tb_customer c on o.customer_id =
		c.id
		where order_state = 2 and production_status=0 and o.shop_detail_id =
		#{shopId} and ver_code = #{vercode}
		ORDER BY push_order_time DESC
	</select>

    <!-- 根据桌号查询已支付的订单 -->
    <select id="selectOrderByTableNumber" resultMap="OrderCustomerMap">
		SELECT
		o.id,o.order_state,o.production_status,o.article_count,o.create_time,o.serial_number,o.order_money,c.nickname,c.telephone,o.customer_id
		from tb_order o LEFT JOIN tb_customer c on o.customer_id = c.id
		where
		order_state = 2 and production_status=0 and o.shop_detail_id =
		#{shopId}
		and table_number = #{tableNumber}
		ORDER BY push_order_time DESC
	</select>

    <select id="selectParentAmount" resultType="java.lang.Double">
		SELECT
		SUM(order_money) FROM tb_order WHERE id=#{0} OR parent_order_id=#{0}
	</select>

    <update id="updateParentAmount">
		UPDATE tb_order SET amount_with_children = #{1} where
		id=#{0}
	</update>
    <update id="changeAllowContinue">
		UPDATE tb_order SET allow_continue_order=#{1} where
		id=#{0}
	</update>
    <select id="selectArticleCountById" resultType="Integer">
		select
		sum(article_count) from tb_order WHERE id=#{0} OR
		parent_order_id=#{0}
	</select>
    <select id="selectByParentId" resultType="Order">
		select * from tb_order
		where parent_order_id=#{0}
	</select>
    <select id="selectChildIdsByParentId" resultType="String">
		select id from
		tb_order where parent_order_id=#{0}
		and order_state in (2,10,11,12)
	</select>
    <select id="selectNewCustomerPackageId" resultType="String">
		SELECT id
		FROM tb_order WHERE allow_appraise=1 AND confirm_time IS NOT NULL
		and
		customer_id=#{0} and shop_detail_id=#{1}
		ORDER BY confirm_time DESC
		LIMIT 0,1
	</select>
    <select id="selectReadyList" resultType="Order">
		SELECT o.id,nickname as
		remark,o.print_order_time FROM tb_order o LEFT JOIN
		tb_customer c
		ON
		o.customer_id=c.id
		WHERE production_status=2 and shop_detail_id=#{0}
		and o.order_state = 2
		and closed=0 ORDER BY print_order_time
	</select>

    <select id="selectArticleSumCountByData" resultType="com.resto.brand.web.dto.brandArticleReportDto">
        select sum(r.count) as totalNum,sum(r.final_price) as sellIncome from (SELECT
        DISTINCT(t.order_id),t.article_name,t.count,t.final_price
        FROM
        tb_order_item t
        INNER JOIN tb_order t2 ON t2.id = t.order_id
        INNER JOIN tb_order_payment_item t3 ON t3.order_id = t2.id
        INNER JOIN tb_article t4 ON t4.id = LEFT (t.article_id, 32)
        WHERE
        t2.brand_id = #{brandId}
        AND t2.order_state IN (2, 10, 11, 12)
        AND t2.production_status IN(2,3)
        AND t.type != 3
        AND <![CDATA[ t2.create_time >= #{beginDate} and t2.create_time <= #{endDate}]]>
        ) as r
	</select>


    <!-- 品牌菜品销售 -->
    <select id="selectBrandArticleSellByDate" resultType="com.resto.brand.web.dto.ArticleSellDto">
		SELECT
		brand_report.articleId,brand_report.brandSellNum,IFNULL(brand_report.article_name,a.name)
		articleName,a.article_family_id articleFamilyId,f.name
		articleFamilyName
		from
		(
		SELECT left(article_id,32) articleId ,SUM(count)
		brandSellNum
		,article_name from tb_order_item where order_id in
		(SELECT
		id from tb_order  where order_state in (2,10,11,12) and
		<![CDATA[ confirm_time >= #{beginDate} and confirm_time <= #{endDate}]]>
		)
		GROUP BY
		left(article_id,32)
		) as brand_report
		LEFT JOIN tb_article a on
		a.id = brand_report.articleId LEFT JOIN
		tb_article_family f on
		a.article_family_id = f.id 
		ORDER BY ${sort}
	</select>


    <!-- 品牌菜品销售 按菜品分类的数据 -->
    <select id="selectBrandArticleSellByDateAndArticleFamilyId" resultType="com.resto.brand.web.dto.ArticleSellDto">
		SELECT
		brand_report.articleId,brand_report.brandSellNum,IFNULL(brand_report.article_name,a.name)
		articleName,a.article_family_id articleFamilyId,f.name
		articleFamilyName
		from
		(
		SELECT left(article_id,32) articleId ,SUM(count)
		brandSellNum
		,article_name from tb_order_item where order_id in
		(SELECT
		id from tb_order where order_state in (2,10,11,12) and
		<![CDATA[ confirm_time >= #{beginDate} and confirm_time <= #{endDate}]]>)
		GROUP BY
		left(article_id,32)
		) as brand_report
		LEFT JOIN tb_article a on
		a.id = brand_report.articleId inner JOIN
		tb_article_family f on
		a.article_family_id = f.id and f.id=#{articleFamilyId}
		order by ${sort}
	</select>

    <select id="selectShopArticleSellByDate" resultType="com.resto.brand.web.dto.ArticleSellDto">
	
select r.articleId,r.type, r.article_name,sum(r.count) as shopSellNum,r.articleFamilyId,r.articleFamilyName,r.peference,r.sort,r.order_id,sum(r.final_price) as salles from (	SELECT
        DISTINCT(t.order_id),
        LEFT (t.article_id, 32) AS articleId,
        t.count,
        t.article_name,
        t5.id AS articleFamilyId,
        t5. NAME AS articleFamilyName,
        t5.peference,
        t4.sort,
		t.type,
        t.final_price
        FROM
        tb_order_item t
        INNER JOIN tb_order t2 ON t2.id = t.order_id
        INNER JOIN tb_order_payment_item t3 ON t3.order_id = t2.id
        INNER JOIN tb_article t4 ON t4.id = LEFT (t.article_id, 32)
        INNER JOIN tb_article_family t5 ON t5.id = t4.article_family_id
        WHERE
        t2.order_state in (2,10,11,12)
        and t2.production_status in (2,3)
        and
        <![CDATA[ t2.create_time >= #{beginDate} and  t2.create_time <= #{endDate}]]> and t2.shop_detail_id=#{shopId}
        ) as r
        GROUP BY r.article_name
	</select>

    <!-- 品牌菜品销售中 店铺菜品按菜品分类的数据   品牌端显示 -->
    <select id="selectShopArticleSellByDateAndArticleFamilyId" resultType="com.resto.brand.web.dto.ArticleSellDto">
		SELECT
		shop_report.articleId,shop_report.shopSellNum,shop_report.shopSellNum,cast(shop_report.shopSellNum/shop_report.shopSellNum
		as decimal(10,2)) salesRatio,
		IFNULL(shop_report.article_name,a.name)
		articleName,a.article_family_id articleFamilyId,f.name
		articleFamilyName
		from (
		SELECT left(article_id,32) articleId
		,SUM(count) shopSellNum
		,article_name from tb_order_item where order_id
		in
		(SELECT id from tb_order where order_state in (2,10,11,12) and
		shop_detail_id
		= #{shopId} and
	 			<![CDATA[ confirm_time >= #{beginDate} and confirm_time <= #{endDate}]]>
		) GROUP BY left(article_id,32)
		) as shop_report LEFT JOIN
		(
		SELECT
		left(article_id,32) articleId ,SUM(count) shopSellNum ,article_name
		from tb_order_item where order_id in
		(SELECT id from tb_order where
		order_state in (2,10,11,12) and
	 		<![CDATA[ confirm_time >= #{beginDate} and confirm_time <= #{endDate}]]>)
		GROUP BY left(article_id,32)
		) as brand_report on shop_report.articleId
		= brand_report.articleId
		LEFT JOIN tb_article a on a.id =
		shop_report.articleId INNER JOIN
		tb_article_family f on
		a.article_family_id = f.id AND f.id=#{articleFamilyId}
		order by ${sort}
	</select>


    <!-- 店铺菜品销售记录 店铺端-->
    <select id="selectShopArticleByDate" resultType="com.resto.brand.web.dto.ArticleSellDto">
        SELECT sum(r.count) as shopSellNum,r.article_name,r.articleFamilyName FROM(
        SELECT
        DISTINCT(t.order_id),
        LEFT (t.article_id, 32) AS articleId,
        t.count,
        t.article_name,
        t5.id AS articleFamilyId,
        t5. NAME AS articleFamilyName,
        t5.peference,
        t4.sort

        FROM
        tb_order_item t
        INNER JOIN tb_order t2 ON t2.id = t.order_id
        INNER JOIN tb_order_payment_item t3 ON t3.order_id = t2.id
        INNER JOIN tb_article t4 ON t4.id = LEFT (t.article_id, 32)
        INNER JOIN tb_article_family t5 ON t5.id = t4.article_family_id
        WHERE
        t2.production_status in (2,3)
        and
        <![CDATA[ t2.create_time >= #{beginDate} and t2.create_time <= #{endDate}]]> and t2.shop_detail_id=#{shopId}


        ) as r
        GROUP BY r.article_name

	   ORDER BY ${sort}

	</select>

    <!-- 店铺菜品销售按菜品分类的数据  -->

    <select id="selectShopArticleByDateAndArticleFamilyId" resultType="com.resto.brand.web.dto.ArticleSellDto">
		SELECT
	shop_report.articleId,
	shop_report.shopSellNum,
	IFNULL(
		shop_report.article_name,
		a. NAME
	) articleName,
	a.article_family_id articleFamilyId,
	f. NAME articleFamilyName
FROM
	(
		SELECT
			LEFT (article_id, 32) articleId,
			SUM(count) shopSellNum,
			article_name
		FROM
			tb_order_item
		WHERE
			order_id IN (
				SELECT
					id
				FROM
					tb_order
				WHERE
					order_state IN (2, 10, 11, 12)
				AND shop_detail_id = #{shopId}
				AND <![CDATA[ confirm_time >= #{beginDate} and confirm_time <= #{endDate}]]>)
		GROUP BY
			LEFT (article_id, 32)
	) AS shop_report
LEFT JOIN tb_article a ON a.id = shop_report.articleId
INNER JOIN tb_article_family f ON a.article_family_id = f.id and f.id=#{articleFamilyId}
order by ${sort}
	</select>

    <select id="selectBytimeAndState" resultType="com.resto.brand.web.dto.OrderPayDto">
SELECT
	SUM(oi.pay_value) payValue,
	COUNT(oi.order_id) orderNum
FROM
	(
		SELECT
			pay_value,
			order_id,
			pay_time
		FROM
			tb_order_payment_item
		WHERE
		<![CDATA[ pay_time >= #{beginDate} and pay_time <= #{endDate}]]>
	) AS oi
LEFT JOIN tb_order o ON oi.order_id = o.id
WHERE
	o.brand_id = #{brandId}
</select>


    <select id="selectShopArticleDetails" resultType="com.resto.brand.web.dto.ShopArticleReportDto">
	 select sum(r.count) as totalNum,sum(r.final_price) as sellIncome,r.shopId from (SELECT
        DISTINCT(t.order_id),t.article_name,t.count,t.final_price,t2.shop_detail_id as shopId
        FROM
        tb_order_item t
        INNER JOIN tb_order t2 ON t2.id = t.order_id
        INNER JOIN tb_order_payment_item t3 ON t3.order_id = t2.id
        INNER JOIN tb_article t4 ON t4.id = LEFT (t.article_id, 32)
        WHERE
        t2.brand_id = #{brandId}
        AND t2.order_state IN (2, 10, 11, 12)
        AND t2.production_status in (2,3)
        AND t.type != 3
        AND <![CDATA[ t2.create_time >= #{beginDate} and t2.create_time <= #{endDate}]]>
        ) as r
        GROUP BY r.shopId
</select>

    <select id="selectShopArticleCom" resultType="com.resto.brand.web.dto.ShopArticleReportDto">
        select sum(r.count) as totalNum,sum(r.final_price) as sellIncome,r.shopId from (SELECT
        DISTINCT(t.order_id),t.article_name,t.count,t.final_price,t2.shop_detail_id as shopId
        FROM
        tb_order_item t
        INNER JOIN tb_order t2 ON t2.id = t.order_id
        INNER JOIN tb_order_payment_item t3 ON t3.order_id = t2.id
        INNER JOIN tb_article t4 ON t4.id = LEFT (t.article_id, 32)


        WHERE
        t2.brand_id = #{brandId}
        AND t2.order_state IN (2, 10, 11, 12)
        AND t.type = 3
        AND <![CDATA[ t2.create_time >= #{beginDate} and t2.create_time <= #{endDate}]]>
        ) as r
        GROUP BY r.shopId
    </select>


    <select id="selectShopArticleNum" resultType="Integer">

SELECT IFNULL(SUM(shop_article_report.shopSellNum),0) totalNum FROM
(SELECT
		shop_report.articleId,shop_report.shopSellNum,IFNULL(shop_report.article_name,a.name)
		articleName,a.article_family_id articleFamilyId,f.name
		articleFamilyName
		from
		(
		SELECT left(article_id,32) articleId ,SUM(count)
		shopSellNum
		,article_name from tb_order_item where order_id in
		(SELECT
		id from tb_order where order_state in (2,10,11,12) and
		<![CDATA[ confirm_time >= #{beginDate} and confirm_time <= #{endDate}]]> and shop_detail_id=#{shopId}
		)
		GROUP BY
		left(article_id,32)
		) as shop_report
		LEFT JOIN tb_article a on
		a.id =shop_report.articleId INNER  JOIN
		tb_article_family f on
		a.article_family_id = f.id AND a.article_type=1
)as shop_article_report


</select>

    <select id="selectBrandArticleSellByDateAndFamilyId" resultType="com.resto.brand.web.dto.ArticleSellDto">

        select sum(e.count) as brandSellNum,e.articleFamilyName,sum(e.total) as salles from ( select s.peference,  s.articleFamilyName, sum(s.count) as count,sum(s.final_price)  as total,s.article_name from   (
        SELECT
        DISTINCT (t.order_id),
        t5. NAME AS articleFamilyName,
        t.article_name AS articleName,
        t.count AS count,
        t.article_name,
        t.final_price,
        t5.peference
        FROM
        tb_order_item t
        INNER JOIN tb_order t2 ON t2.id = t.order_id
        INNER JOIN tb_order_payment_item t3 ON t3.order_id = t2.id
        INNER JOIN tb_article t4 ON t4.id = LEFT (t.article_id, 32)
        INNER JOIN tb_article_family t5 ON t5.id = t4.article_family_id
        WHERE
        t2.order_state IN (2, 10, 12, 11)
        AND
        <![CDATA[ t2.create_time >= #{beginDate} and t2.create_time <= #{endDate}]]>
         and t2.brand_id= #{brandId}
        ) as s
        GROUP BY  s.article_name
        ) as e
        GROUP BY e.articleFamilyName
order by ${sort}

</select>

    <select id="selectBrandArticleSellByDateAndId" resultType="com.resto.brand.web.dto.ArticleSellDto">

        select r.type, r.articleId, r.article_name,sum(r.count) as brandSellNum,r.articleFamilyId,r.articleFamilyName,r.peference,r.sort,r.order_id,sum(r.final_price) as salles from (	SELECT
        DISTINCT(t.order_id),
        LEFT (t.article_id, 32) AS articleId,
        t.count,
        t.article_name,
        t5.id AS articleFamilyId,
        t5. NAME AS articleFamilyName,
        t5.peference,
        t4.sort,
t.type,
        t.final_price
        FROM
        tb_order_item t
        INNER JOIN tb_order t2 ON t2.id = t.order_id
        INNER JOIN tb_order_payment_item t3 ON t3.order_id = t2.id
        INNER JOIN tb_article t4 ON t4.id = LEFT (t.article_id, 32)
        INNER JOIN tb_article_family t5 ON t5.id = t4.article_family_id
        WHERE
        t2.order_state in (2,10,11,12)
        and t2.production_status in (2,3)
        and
      <![CDATA[ t2.create_time >= #{beginDate} and t2.create_time <= #{endDate}]]>   and t2.brand_id= #{brandId}
        ) as r
        GROUP BY r.article_name
order by ${sort}

</select>


    <select id="selectBrandFamilyArticleSellByDateAndArticleFamilyId"
            resultType="com.resto.brand.web.dto.ArticleSellDto">

SELECT SUM(ap.brandSellNum)brandSellNum,SUM(ap.salles)salles ,ap.articleFamilyId ,ap.articleFamilyName ,ap.peference ,ap.articleName from
(
SELECT
		brand_report.articleId,brand_report.brandSellNum,IFNULL(brand_report.article_name,a.name)
		articleName,a.article_family_id articleFamilyId,f.name articleFamilyName ,brand_report.salles,f.peference 
		
		from
		(
		SELECT left(article_id,32) articleId ,SUM(count)brandSellNum, SUM(final_price) salles
	
		,article_name from tb_order_item where order_id in
		(SELECT
		id from tb_order  where order_state in (2,10,11,12) and
		<![CDATA[ confirm_time >= #{beginDate} and confirm_time <= #{endDate}]]> and brand_id=#{brandId}
		)
		GROUP BY
		left(article_id,32)
		) as brand_report
		LEFT JOIN tb_article a on
		a.id = brand_report.articleId LEFT JOIN
		tb_article_family f on
		a.article_family_id = f.id 
) as ap  where ap.articleFamilyId = #{articleFamilyId}
ORDER BY ${sort}

</select>


    <select id="selectMoneyAndNumByDate" resultType="com.resto.shop.web.model.Order">
SELECT
	o.shop_detail_id,
	o.id,
	oi.payment_mode_id,
	oi.pay_value
FROM
	tb_order o
INNER JOIN tb_order_payment_item oi ON o.id = oi.order_id
WHERE
o.order_state IN (10, 11, 12) and 
	<![CDATA[ o.create_time >= #{beginDate} and o.create_time <= #{endDate}]]> and brand_id=#{brandId}
</select>

    <select id="selectShopArticleSellByDateAndFamilyId" resultType="com.resto.brand.web.dto.ArticleSellDto">

SELECT SUM(ap.shopSellNum)shopSellNum,SUM(ap.salles)salles ,ap.articleFamilyId ,ap.articleFamilyName ,ap.peference from
(
SELECT
		shop_report.articleId,shop_report.shopSellNum,IFNULL(shop_report.article_name,a.name)
		articleName,a.article_family_id articleFamilyId,f.name articleFamilyName ,shop_report.salles,f.peference
		from
		(
		SELECT left(article_id,32) articleId ,SUM(count)shopSellNum, SUM(final_price) salles
		,article_name from tb_order_item where order_id in
		(SELECT
		id from tb_order  where order_state in (2,10,11,12) and
		<![CDATA[ confirm_time >= #{beginDate} and confirm_time <= #{endDate}]]> and shop_detail_id=#{shopId}
		)
		GROUP BY
		left(article_id,32)
		) as shop_report
		LEFT JOIN tb_article a on
		a.id = shop_report.articleId LEFT JOIN
		tb_article_family f on
		a.article_family_id = f.id
) as ap GROUP BY ap.articleFamilyId
ORDER BY ${sort}

</select>


    <select id="selectShopArticleSellByDateAndId" resultType="com.resto.brand.web.dto.ArticleSellDto">
SELECT
		shop_report.articleId,shop_report.shopSellNum,IFNULL(shop_report.article_name,a.name)
		articleName,a.article_family_id articleFamilyId,f.name articleFamilyName ,shop_report.salles,f.peference
		from
		(
		SELECT left(article_id,32) articleId ,SUM(count)shopSellNum, SUM(final_price) salles
		,article_name from tb_order_item where order_id in
		(SELECT
		id from tb_order  where order_state in (2,10,11,12) and
		<![CDATA[ confirm_time >= #{beginDate} and confirm_time <= #{endDate}]]> and shop_detail_id=#{shopId}
		)
		GROUP BY
		left(article_id,32)
		) as shop_report
		LEFT JOIN tb_article a on
		a.id = shop_report.articleId LEFT JOIN
		tb_article_family f on
		a.article_family_id = f.id
ORDER BY ${sort}

</select>

    <select id="selectListByTime" resultMap="selectOrdersMap">
	SELECT
	o.id,
	o.create_time,
	o.distribution_mode_id,
	o.ver_code,
	o.order_money,
	o.order_state,
	o.production_status,
	c.telephone,
	a.level,
	oi.pay_value,
	oi.payment_mode_id
FROM
	tb_order o
LEFT JOIN tb_customer c ON o.customer_id = c.id
LEFT JOIN tb_appraise a ON o.id = a.order_id
LEFT JOIN tb_order_payment_item oi on o.id = oi.order_id
where
<![CDATA[o.create_time >= #{beginDate} and o.create_time <= #{endDate}]]> and o.shop_detail_id=#{shopId}
</select>


    <select id="selectOrderDetails" resultMap="selectOrderDetailsMap">
	SELECT
	o.shop_detail_id,
	o.id,
	o.create_time,
	o.distribution_mode_id,
	o.ver_code,
	o.order_state,
	o.order_money,
	oi.id orderItem_id,
	oi.article_name,
	oi.count,
	oi.final_price,
	oi.unit_price,
	c.id customer_id,
	c.telephone,
	ap.id appraise_id,
	ap.level ,
	ap.content,
	f.id articleFamily_id,
	f.name articleFamilyName
FROM
	tb_order o
LEFT JOIN tb_order_item oi ON o.id = oi.order_id
LEFT JOIN tb_customer c ON o.customer_id = c.id
LEFT JOIN tb_appraise ap on o.id = ap.order_id
LEFT JOIN tb_article r on left(oi.article_id,32) = r.id
LEFT JOIN tb_article_family f on f.id = r.article_family_id
WHERE
	o.id = #{orderId}

</select>

    <update id="setOrderPrintFail">
		update tb_order
		set production_status = 5
		where id = #{orderId}
	</update>

    <select id="getOrderAccount" resultMap="BaseResultMap">
        select count(1) as orderCount,sum(orderTotal) as orderTotal  from ( select  t.original_amount as orderTotal from tb_order t
        INNER JOIN tb_order_payment_item t2 on t2.order_id = t.id
        where
        shop_detail_id = #{shopId} and  t.order_state in (2,10,11,12,13) and
        DATE_FORMAT(NOW(),'%d %b %y') = DATE_FORMAT(t.create_time,'%d %b %y')and t.production_status in(2,3)
        GROUP BY t.id
        ) as r
    </select>

    <select id="selectListBybrandId" resultMap="selectListBybrandIdmap">
        SELECT
        o.id , o.order_money ,a.level,o.shop_detail_id,a.red_money from tb_order o
        INNER JOIN tb_order_payment_item oi
        on o.id = oi.order_id
        LEFT JOIN  tb_appraise a
        on o.id = a.order_id
        WHERE o.order_state in (10,11,12) and o.production_status in (2,3)
        and <![CDATA[ o.create_time >= #{beginDate} and o.create_time <= #{endDate}]]>
        and o.brand_id = #{brandId}
        GROUP BY o.id
    </select>


    <select id="selectAppraiseByShopId" resultMap="selectListByshopIdmap">
	SELECT
	o.id , o.order_money ,a.level,a.red_money,a.content,a.feedback ,a.create_time,c.telephone  from tb_order o
	INNER JOIN tb_order_payment_item oi
	on o.id = oi.order_id
	LEFT JOIN  tb_appraise a
	on o.id = a.order_id
	LEFT JOIN tb_customer c
	on o.customer_id = c.id
	WHERE o.order_state in (10,11,12) and o.production_status in (2,3)
	and  <![CDATA[ o.create_time >= #{beginDate} and o.create_time <= #{endDate}]]>
	and o.shop_detail_id = #{shopId} and a.level in(1,2,3,4,5)
GROUP BY o.id

</select>


    <!--根据菜品id查找菜品库存(无规格)-->
    <select id="selectArticleCount" resultType="java.lang.Integer">
        select current_working_stock from tb_article
        where id = #{articleId}
    </select>


    <!--根据菜品id查找菜品库存(有规格)-->
    <select id="selectArticlePriceCount" resultType="java.lang.Integer">
        select current_working_stock from tb_article_price
        where id = #{articleId}
    </select>



    <update id="updateArticleStock">
        update tb_article
        <set>
            <if test="type=='minus'">
                current_working_stock = current_working_stock - #{count}
            </if>
            <if test="type == 'add'">
                current_working_stock = current_working_stock +  #{count}
            </if>
        </set>

        where id = #{articleId}
    </update>

    <update id="updateArticlePriceStock">
        update tb_article_price
        <set>
            <if test="type =='minus'">
                current_working_stock = current_working_stock -  #{count}
            </if>
            <if test="type =='add'">
                current_working_stock = current_working_stock +  #{count}
            </if>
        </set>
        where id = #{articleId}
    </update>

    <update id="setEmpty">
        update tb_article
        set is_empty = 1 , empty_remark = '【系统自动沽清】菜品已售馨'
        where id = #{articleId}
        and current_working_stock = 0
    </update>
    
    <update id="setArticlePriceEmpty">
        update tb_article_price
        set empty_remark = '【系统自动沽清】菜品此规格已售馨'
        where id = #{articleId}
        and current_working_stock = 0
    </update>

    <update id="setEmptyFail">
        update tb_article
        set is_empty = 0 , empty_remark = NULL
        where id = #{articleId}
    </update>
    
    <update id="setArticlePriceEmptyFail">
        update tb_article_price
        set empty_remark = NULL
        where id = #{articleId}
    </update>

    <update id="setStockBySuit">

update tb_article t ,
(
select min(count) as count,article_name,id from (select max(t4.current_working_stock) as count ,t2.id as attr_id, t2.name,t.name as article_name,t.id from tb_article t
INNER JOIN tb_meal_attr t2 on t2.article_id = t.id
INNER JOIN tb_meal_item t3 on t3.meal_attr_id = t2.id
INNER JOIN tb_article t4 on t4.id = t3.article_id
where t.article_type in(2,3) and t.shop_detail_id = #{shopId} and t.state = 1
GROUP BY t2.id
) as r
GROUP BY article_name
) as b
set t.current_working_stock = b.count,
t.is_empty = if(b.count = 0,1,0),t.empty_remark = if(b.count = 0,'【系统自动沽清】套餐某子菜品售罄',NULL)
where t.id = b.id

    </update>



    <select id="getPayment" resultType="java.math.BigDecimal">
       select ifnull(sum(t2.pay_value),0) from tb_order t
INNER JOIN tb_order_payment_item t2 on t2.order_id = t.id
where    DATE_FORMAT(NOW(),'%d %b %y') = DATE_FORMAT(t.create_time,'%d %b %y')
and t2.payment_mode_id = #{type} and t.shop_detail_id = #{shopId} and t.production_status in (2,3)
    </select>


    <select id="getArticleCount" resultType="java.lang.Integer">

select IFNULL(SUM(shopSellNum),0) from ( SELECT sum(r.count) as shopSellNum,r.id,r.article_name,r.articleFamilyName FROM(
        SELECT
        DISTINCT(t.order_id),
        LEFT (t.article_id, 32) AS articleId,
        t.count,
        t.article_name,
        t5.id AS articleFamilyId,
        t5. NAME AS articleFamilyName,
        t5.peference,
        t4.sort,
        t5.id

        FROM
        tb_order_item t
        INNER JOIN tb_order t2 ON t2.id = t.order_id
        INNER JOIN tb_order_payment_item t3 ON t3.order_id = t2.id
        INNER JOIN tb_article t4 ON t4.id = LEFT (t.article_id, 32)
        INNER JOIN tb_article_family t5 ON t5.id = t4.article_family_id
        WHERE
        t2.production_status in (2,3)
        and
         DATE_FORMAT(NOW(),'%d %b %y') = DATE_FORMAT(t.create_time,'%d %b %y')   and t2.shop_detail_id= #{shopId}


        ) as r
        GROUP BY r.article_name
) as g
where g.id = #{familyId}
GROUP BY g.articleFamilyName

    </select>

    <select id="getTableNumberAll" parameterType="java.lang.String" resultMap="selectOrderTableNumberMap">
        select * from (select * from tb_order o  where o.shop_detail_id = #{shopId} ORDER BY o.create_time desc ) as r
        group by r.table_number order by r.create_time desc
    </select>
    <select id="selectOrderPaymentItems" resultType="orderPaymentItem">
        select * from tb_order_payment_item where id = #{order_id} and payment_mode_id in (1,4)
    </select>
    <select id="selectOrderItems" resultType="orderItem">
        select * from tb_order_item where id = #{order_id}
    </select>

</mapper>




